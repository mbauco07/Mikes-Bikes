 
@model PagedList.IPagedList<Mikes_Bikes.Models.Bike>
@using PagedList.Mvc;



@{
    ViewBag.Title = "Index";
}
<style>
    .floatLeft {
        width: 10%;
        float: left;
    }

    .floatRight {
        width: 90%;
        float: right;
    }

    .container {
        overflow: hidden;
    }
</style>

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "CustomerBikeList", FormMethod.Get))
{
    <p>
        <!-- Html.DropDownList(keyInViewBag&variableName, nameForEmptyString) -->
        Catergory : @Html.DropDownList("bikeCat", "All")<br />
        Search : @Html.TextBox("searchBike")<br />
        <input type="submit" value="Search" />
    </p>
}
<div class="container">
    <div class="floatLeft">
        <table class="table">

            <tr>
                <td>@Html.ActionLink("Bike Name", "Index", new { sortColumn = ViewBag.nameSort })</td>
            </tr>
            <tr>
                <td>@Html.ActionLink("Bike Colour", "Index", new { sortColumn = ViewBag.colourSort })</td>
            </tr>
            <tr>
                <td>@Html.ActionLink("Bike Manufacture", "Index", new { sortColumn = ViewBag.mtfSort })</td>
            </tr>
            <tr>
                <td>@Html.ActionLink("Bike Type", "Index", new { sortColumn = ViewBag.typeSort })</td>
            </tr>
            <tr>
                <td>@Html.ActionLink("Bike Price", "Index", new { sortColumn = ViewBag.priceSort })</td>
            </tr>
            <tr>
                <td>
                    @Html.ActionLink("Bike Sale", "Index", new { sortColumn = ViewBag.saleSort })
                </td>
            </tr>
        </table>
    </div>
    <div class=" floatRight">
       <table>
        @foreach (var item in Model)
        {
            <tr>
                <td colspan="6">
                    @Html.Partial("PartialBike", item) 
                </td>
            </tr>
            <tr>
                <td>
                    
                    @{ 
                        if(item.BikeSaleAmt<1)
                        {
                            double saleAmt = ((double)item.BikePrice * (double)item.BikeSaleAmt);
                            double salePrice = (double)item.BikePrice - saleAmt;
                            @Html.Raw("<del>$" + item.BikePrice+"</del> $"+salePrice.ToString());
                        }
                        else
                        {
                            @Html.Raw("$");
                           @Html.DisplayFor(model => item.BikePrice);
                        }
                    }
                    
                </td>
            </tr>
        }
        </table>
    </div>
</div>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))


